/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package QLCoffeeShop;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HIEU
 */
public class QuanLySanPham extends javax.swing.JFrame {
    private DefaultTableModel tableModel;
    List<ThucAn> dsta = new ArrayList<>();
    List<NuocUong> dsnu = new ArrayList<>();

    /**
     * Creates new form QuanLySanPham
     * @throws java.sql.SQLException
     */
    public QuanLySanPham() throws SQLException {
        initComponents();
        
            showTA();
            showNU();
            
    }
    
    public void showTA() throws SQLException {
        tableModel = (DefaultTableModel) tbthucan.getModel();
        dsta = QLThucAn.findALLTA();
        
        tableModel.setRowCount(0); //Dữ liệu bắt đầu hiển thị từ hàng đầu tiên
        //Nếu không thì sẽ hiện thị từ hàng thứ 5
        dsta.forEach(ta -> {
            tableModel.addRow(new Object[]{
              
                ta.getTenSP(),
                ta.getGiaBan(),
                ta.getTinhTrang(),
                ta.getThoiDiemBan(),
                ta.getDanhMuc(),
                ta.getLoaiTA()
            });
        });
    }
    
    public void showNU() throws SQLException{
        tableModel = (DefaultTableModel) tbnuocuong.getModel();
        dsnu = QLNuocUong.findAllNU();
        
        tableModel.setRowCount(0); //Dữ liệu bắt đầu hiển thị từ hàng đầu tiên
        //Nếu không thì sẽ hiện thị từ hàng thứ 5
        dsnu.forEach(tu -> {
            tableModel.addRow(new Object[] {
                
                tu.getTenSP(),
                tu.getGiaBan(),
                tu.getTinhTrang(),
                tu.getThoiDiemBan(),
                tu.getDanhMuc(),
                tu.getLoaiNU()
            });
        });
    }
    public void showNUSX() throws SQLException{
         tableModel = (DefaultTableModel) tbnuocuong.getModel();
        dsnu = QLNuocUong.danhSachSXNU();
        
        
        tableModel.setRowCount(0); //Dữ liệu bắt đầu hiển thị từ hàng đầu tiên
        //Nếu không thì sẽ hiện thị từ hàng thứ 5
        dsnu.forEach(tu -> {
            tableModel.addRow(new Object[] {
                
                tu.getTenSP(),
                tu.getGiaBan(),
                tu.getTinhTrang(),
                tu.getThoiDiemBan(),
                tu.getDanhMuc(),
                tu.getLoaiNU()
            });
        });
    }
     public void showTASX() throws SQLException{
         tableModel = (DefaultTableModel) tbthucan.getModel();
        dsta = QLThucAn.SXTA();
        
        
        tableModel.setRowCount(0); //Dữ liệu bắt đầu hiển thị từ hàng đầu tiên
        //Nếu không thì sẽ hiện thị từ hàng thứ 5
        dsta.forEach(tu -> {
            tableModel.addRow(new Object[] {
                
                tu.getTenSP(),
                tu.getGiaBan(),
                tu.getTinhTrang(),
                tu.getThoiDiemBan(),
                tu.getDanhMuc(),
                tu.getLoaiTA()
            });
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbthucan = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbnuocuong = new javax.swing.JTable();
        btnthemta = new javax.swing.JButton();
        btntimkiemta = new javax.swing.JButton();
        btnxoata = new javax.swing.JButton();
        btncapnhatta = new javax.swing.JButton();
        btnsxta = new javax.swing.JButton();
        btnthemnu = new javax.swing.JButton();
        btntimkiemnu = new javax.swing.JButton();
        btnxoanu = new javax.swing.JButton();
        btncapnhatnu = new javax.swing.JButton();
        btnSapXepNUTheoGia = new javax.swing.JButton();
        btntimkiemtatheogia = new javax.swing.JButton();
        btntimkiemnutheogia = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Danh Mục Thức Ăn");

        jLabel2.setText("Danh Mục Nước Uống");

        tbthucan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Tên Thức Ăn", "Giá Bán", "Tình Trạng", "Thời Điểm Bán", "Danh Mục ", "Loại Thức Ăn"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbthucan);

        tbnuocuong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Tên Nước Uống", "Giá Bán", "Tình Trạng", "Thời Điểm Bán", "Danh Mục", "Loại Thức Uống"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbnuocuong);

        btnthemta.setText("Thêm Thức Ăn");
        btnthemta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemtaActionPerformed(evt);
            }
        });

        btntimkiemta.setText("Tìm Kiếm (Tên)");
        btntimkiemta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimkiemtaActionPerformed(evt);
            }
        });

        btnxoata.setText("Xóa");
        btnxoata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoataActionPerformed(evt);
            }
        });

        btncapnhatta.setText("Cập Nhật");

        btnsxta.setText("Sắp Xếp(Gía)");
        btnsxta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsxtaActionPerformed(evt);
            }
        });

        btnthemnu.setText("Thêm Nước Uống");
        btnthemnu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemnuActionPerformed(evt);
            }
        });

        btntimkiemnu.setText("Tìm Kiếm (Tên)");
        btntimkiemnu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimkiemnuActionPerformed(evt);
            }
        });

        btnxoanu.setText("Xóa");
        btnxoanu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoanuActionPerformed(evt);
            }
        });

        btncapnhatnu.setText("Cập Nhật");

        btnSapXepNUTheoGia.setText("Sắp Xếp (Giá)");
        btnSapXepNUTheoGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSapXepNUTheoGiaActionPerformed(evt);
            }
        });

        btntimkiemtatheogia.setText("Tìm Kiếm (Giá)");
        btntimkiemtatheogia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimkiemtatheogiaActionPerformed(evt);
            }
        });

        btntimkiemnutheogia.setText("Tìm Kiếm (Giá)");
        btntimkiemnutheogia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimkiemnutheogiaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnthemta, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btntimkiemtatheogia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btntimkiemta, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(btnxoata, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btncapnhatta, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnsxta, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnthemnu, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btntimkiemnutheogia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btntimkiemnu, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(btnxoanu, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btncapnhatnu, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSapXepNUTheoGia, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnthemta)
                    .addComponent(btntimkiemta)
                    .addComponent(btnxoata)
                    .addComponent(btncapnhatta)
                    .addComponent(btnsxta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btntimkiemtatheogia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnthemnu)
                    .addComponent(btntimkiemnu)
                    .addComponent(btnxoanu)
                    .addComponent(btncapnhatnu)
                    .addComponent(btnSapXepNUTheoGia))
                .addGap(5, 5, 5)
                .addComponent(btntimkiemnutheogia))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //Button thêm thức ăn (chạy)
    private void btnthemtaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemtaActionPerformed
        try {
            String inputTenTA = JOptionPane.showInputDialog(this, "Nhập tên thức ăn");
            double inputGiaBan = Integer.parseInt(JOptionPane.showInputDialog(this,
                    "Nhập giá bán"));
            String inputTinhTrang = JOptionPane.showInputDialog(this, "Nhập tình trạng");
            String inputThoiDiemBan = JOptionPane.showInputDialog(this, "Nhập thời điểm bán");
            String inputDanhMucSP = JOptionPane.showInputDialog(this, "Nhập danh mục sản phẩm");
            String inputLoaiTA = JOptionPane.showInputDialog(this, "Nhập loại thức ăn");
            
            //Chọn phương thức khởi tạo không ID vì ID là khóa chính của bảng
            ThucAn ta = new ThucAn(inputTenTA, inputGiaBan, inputTinhTrang, 
                    inputThoiDiemBan, inputDanhMucSP, inputLoaiTA);
            
            QLThucAn.themTA(ta);
            showTA();
        } catch (SQLException ex) {
            Logger.getLogger(QuanLySanPham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnthemtaActionPerformed
    //Buttton xóa thức ăn (Chạy)
    private void btnxoataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoataActionPerformed
        //Xóa cả ở CSDL
        //Lấy ra vị trí index khi click chuột
        int selectedIndex = tbthucan.getSelectedRow();
        if (selectedIndex >= 0) { //Đúng
            ThucAn ta = dsta.get(selectedIndex);
            //Hiển thị một Pop-up Panel xác nhận xóa, sau khi nhấn Delete
            int option = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa món ăn này?");
            System.out.println("option: " + option);  
            //Ouput => Yes: 0, No: 1, Cancel: 2
            if (option == 0) {
                try {
                    QLThucAn.xoaTA(ta.getTenSP());//Xóa Bàn
                    showTA(); //Hiện thị danh sách nhân viên sau khi xóa
                } catch (SQLException ex) {
                    Logger.getLogger(QuanLySanPham.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }
    }//GEN-LAST:event_btnxoataActionPerformed
    //Buttton xóa nước uống (Chạy)
    private void btnxoanuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoanuActionPerformed
        //Xóa cả ở CSDL
        //Lấy ra vị trí index khi click chuột
        int selectedIndex = tbnuocuong.getSelectedRow();
        if (selectedIndex >= 0) { //Đúng
            NuocUong nu = dsnu.get(selectedIndex);
            //Hiển thị một Pop-up Panel xác nhận xóa, sau khi nhấn Delete
            int option = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa thức uống này?");
            System.out.println("option: " + option);
            //Ouput => Yes: 0, No: 1, Cancel: 2
            if (option == 0) {
                try {
                    QLNuocUong.xoaNU(nu.getTenSP());//Xóa Bàn
                    showNU(); //Hiện thị danh sách nhân viên sau khi xóa
                } catch (SQLException ex) {
                    Logger.getLogger(QuanLySanPham.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnxoanuActionPerformed
    //Button thêm nước uống (chạy)
    private void btnthemnuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemnuActionPerformed
        try {
            String inputTenNU = JOptionPane.showInputDialog(this, "Nhập tên nước uống");
            double inputGiaBan = Integer.parseInt(JOptionPane.showInputDialog(this,
                    "Nhập giá bán"));
            String inputTinhTrang = JOptionPane.showInputDialog(this, "Nhập tình trạng");
            String inputThoiDiemBan = JOptionPane.showInputDialog(this, "Nhập thời điểm bán");
            String inputDanhMucSP = JOptionPane.showInputDialog(this, "Nhập danh mục sản phẩm");
            String inputLoaiNU = JOptionPane.showInputDialog(this, "Nhập loại nước uống");
            
            //Chọn phương thức khởi tạo không ID vì ID là khóa chính của bảng
            NuocUong nu = new NuocUong(inputTenNU, inputGiaBan, inputTinhTrang,
                    inputThoiDiemBan, inputDanhMucSP, inputLoaiNU);
            
            QLNuocUong.themNU(nu);
            showNU();
        } catch (SQLException ex) {
            Logger.getLogger(QuanLySanPham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnthemnuActionPerformed
    //Button tìm kiếm thức ăn theo tên
    private void btntimkiemtaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimkiemtaActionPerformed
        String inputTenTA = JOptionPane.showInputDialog(this, "Nhập tên thức ăn cần tìm");

        if (inputTenTA.length() > 0) {
            try {
                dsta = QLThucAn.timKiemTA(inputTenTA);
                
                tableModel.setRowCount(0);
                
                dsta.forEach(ta -> {
                    tableModel.addRow(new Object[]{tableModel.getRowCount() + 1,
                        ta.getTenSP(),
                        ta.getGiaBan(),
                        ta.getTinhTrang(),
                        ta.getThoiDiemBan(),
                        ta.getDanhMuc(),
                        ta.getLoaiTA()
                    });
                });
            } catch (SQLException ex) {
                Logger.getLogger(QuanLySanPham.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btntimkiemtaActionPerformed
    //Button tìm kiếm nước uống theo tên (Chạy)
    private void btntimkiemnuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimkiemnuActionPerformed
        String inputTenNU = JOptionPane.showInputDialog(this, "Nhập tên nước uống cần tìm");

        if (inputTenNU.length() > 0) {
            try {
                dsnu = QLNuocUong.timKiemNU(inputTenNU);
            } catch (SQLException ex) {
                Logger.getLogger(QuanLySanPham.class.getName()).log(Level.SEVERE, null, ex);
            }

            tableModel.setRowCount(0);

            dsnu.forEach(nu -> {
                tableModel.addRow(new Object[]{tableModel.getRowCount() + 1,
                    nu.getTenSP(),
                    nu.getGiaBan(),
                    nu.getTinhTrang(),
                    nu.getThoiDiemBan(),
                    nu.getDanhMuc(),
                    nu.getLoaiNU()
                });
            });
        }
    }//GEN-LAST:event_btntimkiemnuActionPerformed
    //Button tìm kiếm thức ăn theo khoảng giá (Chạy)
    private void btntimkiemtatheogiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimkiemtatheogiaActionPerformed
        double inputTuGia = Integer.parseInt(JOptionPane.showInputDialog(this,
                "Từ"));
        double inputDenGia = Integer.parseInt(JOptionPane.showInputDialog(this,
                "Đến"));

        if (inputTuGia > 0 && inputDenGia > 0) {
            try {
                dsta = QLThucAn.timKiemTA(inputTuGia, inputDenGia);

                tableModel.setRowCount(0);

                dsta.forEach(ta -> {
                    tableModel.addRow(new Object[]{tableModel.getRowCount() + 1,
                        ta.getTenSP(),
                        ta.getGiaBan(),
                        ta.getTinhTrang(),
                        ta.getThoiDiemBan(),
                        ta.getDanhMuc(),
                        ta.getLoaiTA()
                    });
                });
            } catch (SQLException ex) {
                Logger.getLogger(QuanLySanPham.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btntimkiemtatheogiaActionPerformed
    //Button tìm kiếm nước uống theo khoảng giá (Chạy)
    private void btntimkiemnutheogiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimkiemnutheogiaActionPerformed
        double inputTuGia = Integer.parseInt(JOptionPane.showInputDialog(this,
                "Từ"));
        double inputDenGia = Integer.parseInt(JOptionPane.showInputDialog(this,
                "Đến"));

        if (inputTuGia > 0 && inputDenGia > 0) {
            try {
                dsnu = QLNuocUong.timKiemNU(inputTuGia, inputDenGia);

                tableModel.setRowCount(0);

                dsnu.forEach(nu -> {
                    tableModel.addRow(new Object[]{tableModel.getRowCount() + 1,
                        nu.getTenSP(),
                        nu.getGiaBan(),
                        nu.getTinhTrang(),
                        nu.getThoiDiemBan(),
                        nu.getDanhMuc(),
                        nu.getLoaiNU()
                    });
                });
            } catch (SQLException ex) {
                Logger.getLogger(QuanLySanPham.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btntimkiemnutheogiaActionPerformed
    //Sắp xếp danh sách nước uống giảm dần thep giá bán
    private void btnSapXepNUTheoGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSapXepNUTheoGiaActionPerformed
        
        try {
            QLNuocUong.sapXepNU();
            showNUSX();
//            showNU();
        } catch (SQLException ex) {
            Logger.getLogger(QuanLySanPham.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_btnSapXepNUTheoGiaActionPerformed

    private void btnsxtaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsxtaActionPerformed
 try {
            QLThucAn.SXTA();
            showTASX();
        } catch (SQLException ex) {
            Logger.getLogger(QuanLySanPham.class.getName()).log(Level.SEVERE, null, ex);
        }
        
            // TODO add your handling code here:
    }//GEN-LAST:event_btnsxtaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new QuanLySanPham().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(QuanLySanPham.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSapXepNUTheoGia;
    private javax.swing.JButton btncapnhatnu;
    private javax.swing.JButton btncapnhatta;
    private javax.swing.JButton btnsxta;
    private javax.swing.JButton btnthemnu;
    private javax.swing.JButton btnthemta;
    private javax.swing.JButton btntimkiemnu;
    private javax.swing.JButton btntimkiemnutheogia;
    private javax.swing.JButton btntimkiemta;
    private javax.swing.JButton btntimkiemtatheogia;
    private javax.swing.JButton btnxoanu;
    private javax.swing.JButton btnxoata;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbnuocuong;
    private javax.swing.JTable tbthucan;
    // End of variables declaration//GEN-END:variables
}
